---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: db
  labels:
    name: mongo
    environment: test
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
    environment: test
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: db
spec:
 serviceName: "mongo"
 replicas: 3
 selector:
    matchLabels:
      role: mongo
      environment: test
 template:
   metadata:
     labels:
       role: mongo
       environment: test
   spec:
     terminationGracePeriodSeconds: 10
     containers:
       - name: mongod
         image: mongo:3.6
         command:
           - mongod
           - "--replSet"
           - rs0
           - "--bind_ip"
           - 0.0.0.0
           - "--smallfiles"
           - "--noprealloc"
         ports:
           - containerPort: 27017
         volumeMounts:
           - name: mongo-storage
             mountPath: /data/db
       - name: mongo-sidecar
         image: cvallance/mongo-k8s-sidecar
         env:
           - name: MONGO_SIDECAR_POD_LABELS
             value: "role=mongo,environment=test"
 volumeClaimTemplates:
 - metadata:
     name: mongo-storage
     annotations:
       volume.beta.kubernetes.io/storage-class: "ssd"
   spec:
     accessModes: [ "ReadWriteOnce" ]
     resources:
       requests:
         storage: 1Gi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: db
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:serviceaccount:db:default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: db